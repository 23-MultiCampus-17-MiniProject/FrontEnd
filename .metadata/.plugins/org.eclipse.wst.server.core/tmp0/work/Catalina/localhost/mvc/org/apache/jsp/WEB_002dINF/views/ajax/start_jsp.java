/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.69
 * Generated at: 2023-12-01 08:55:55 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.ajax;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class start_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    \r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<script src=\"resources/js/jquery-3.7.1.min.js\"></script>\r\n");
      out.write("<script>\r\n");
      out.write("$(document).ready(function(){\r\n");
      out.write("	$(\"#ajaxbtn1\").on('click', function(){\r\n");
      out.write("		$.ajax({\r\n");
      out.write("			url: \"ajaxlogin\",\r\n");
      out.write("			data:{'memberid': $(\"#memberid\").val() , 'pw': $(\"#pw\").val()},\r\n");
      out.write("			type: 'get',\r\n");
      out.write("			dataType: 'json',\r\n");
      out.write("			success: function(response){\r\n");
      out.write("				//alert(JSON.stringify(response));\r\n");
      out.write("				//response 객체형태 -> 출력 -> 문자열형태변경메서드\r\n");
      out.write("				if(response.loginresult == \"로그인성공\"){\r\n");
      out.write("					$(\"#result\").css(\"color\", \"green\");	\r\n");
      out.write("				}else{\r\n");
      out.write("					$(\"#result\").css(\"color\", \"red\");\r\n");
      out.write("				}\r\n");
      out.write("				$(\"#result\").html(\"<h3>\" + response.loginresult + \"</h3>\")\r\n");
      out.write("			},\r\n");
      out.write("			error: function(request, e){\r\n");
      out.write("				alert(\"코드=\" + request.status + \" 메세지=\" + request.responseText + \" 오류=\" + e);\r\n");
      out.write("			}\r\n");
      out.write("		});\r\n");
      out.write("	});\r\n");
      out.write("	\r\n");
      out.write("	$(\"#ajaxbtn2\").on('click', function(){\r\n");
      out.write("		$.ajax({\r\n");
      out.write("			url: \"ajaxmypage\",\r\n");
      out.write("			data:{'memberid': $(\"#memberid\").val() , 'pw': $(\"#pw\").val()},\r\n");
      out.write("			type: 'post',\r\n");
      out.write("			dataType: 'json', //xml도 있지만 옛날 방식\r\n");
      out.write("			success: function(response){\r\n");
      out.write("				//alert(JSON.stringify(response));\r\n");
      out.write("				if(response.membername == null){\r\n");
      out.write("					$(\"#result\").html(\"회원정보가 없습니다\").css(\"color\", \"red\");\r\n");
      out.write("				}else{\r\n");
      out.write("					$(\"#result\").html(\"<h3>\"+response.memberid+\"</h3>\")\r\n");
      out.write("					.append(\"<h3>\"+response.membername+\"</h3>\")\r\n");
      out.write("					.append(\"<h3>\"+response.phone+\"</h3>\")\r\n");
      out.write("					.append(\"<h3>\"+response.email+\"</h3>\")\r\n");
      out.write("					.append(\"<h3>\"+response.regdate+\"</h3>\")\r\n");
      out.write("					.css(\"color\", \"green\");\r\n");
      out.write("				}\r\n");
      out.write("			}, \r\n");
      out.write("			error: function(request, e){\r\n");
      out.write("				alert(\"코드=\" + request.status + \" 메세지=\" + request.responseText + \" 오류=\" + e);\r\n");
      out.write("			}\r\n");
      out.write("		});\r\n");
      out.write("	});\r\n");
      out.write("	\r\n");
      out.write("	$(\"#ajaxbtn3\").on('click', function(){\r\n");
      out.write("		$.ajax({\r\n");
      out.write("			url: \"ajaxlist\",\r\n");
      out.write("			data:{'memberid': $(\"#memberid\").val() , 'pw': $(\"#pw\").val()},\r\n");
      out.write("			type: 'post',\r\n");
      out.write("			dataType: 'json', //xml도 있지만 옛날 방식\r\n");
      out.write("			success: function(response){\r\n");
      out.write("				//alert(JSON.stringify(response));\r\n");
      out.write("				if(response == null){\r\n");
      out.write("					$(\"#result\").html(\"<h3>관리자가 아닙니다</h3>\").css(\"color\", \"red\");\r\n");
      out.write("				}else{\r\n");
      out.write("					$(\"#result\").html(\"\")\r\n");
      out.write("					for(let i = 0; i <= response.length; i++){\r\n");
      out.write("						$(\"#result\")\r\n");
      out.write("						.append(\"<h3><a href=''>\" + response[i].memberid + \"</a>/\")\r\n");
      out.write("						.append(response[i].membername + \"/\")\r\n");
      out.write("						.append(response[i].phone + \"/\")\r\n");
      out.write("						.append(response[i].email + \"<br>\")\r\n");
      out.write("						.css(\"color\", \"green\")\r\n");
      out.write("					}\r\n");
      out.write("				}\r\n");
      out.write("			}, \r\n");
      out.write("			error: function(request, e){\r\n");
      out.write("				alert(\"코드=\" + request.status + \" 메세지=\" + request.responseText + \" 오류=\" + e);\r\n");
      out.write("			}\r\n");
      out.write("		});\r\n");
      out.write("	});\r\n");
      out.write("	\r\n");
      out.write("	$(\"#result a\").on('click', \"a\", function(e){ //새로생긴 a태그에 대해서만\r\n");
      out.write("		e.preventDefault();\r\n");
      out.write("		$.ajax({\r\n");
      out.write("			url: \"ajaxgetpw/\" + $(this).text(), //클릭한 a태그\r\n");
      out.write("			//data:{'memberid': $(\"#memberid\").val() , 'pw': $(\"#pw\").val()},\r\n");
      out.write("			type: 'post',\r\n");
      out.write("			dataType: 'json', //xml도 있지만 옛날 방식\r\n");
      out.write("			success: function(response){\r\n");
      out.write("				//alert(JSON.stringify(response));\r\n");
      out.write("				$(\"#result\").html(response.pw);\r\n");
      out.write("			}, \r\n");
      out.write("			error: function(request, e){\r\n");
      out.write("				alert(\"오류 났다 코드=\" + request.status + \" 메세지=\" + request.responseText + \" 오류=\" + e);\r\n");
      out.write("			}\r\n");
      out.write("		});\r\n");
      out.write("	})\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	$(\"#ajaxbtn4\").on('click', function(){\r\n");
      out.write("		$.ajax({\r\n");
      out.write("			url: \"ajaxgetpw/\" + $(\"#memberid\").val(),\r\n");
      out.write("			//data:{'memberid': $(\"#memberid\").val() , 'pw': $(\"#pw\").val()},\r\n");
      out.write("			type: 'post',\r\n");
      out.write("			dataType: 'json', //xml도 있지만 옛날 방식\r\n");
      out.write("			success: function(response){\r\n");
      out.write("				//alert(JSON.stringify(response));\r\n");
      out.write("				$(\"#result\").html(response.pw);\r\n");
      out.write("			}, \r\n");
      out.write("			error: function(request, e){\r\n");
      out.write("				alert(\"오류 났다 코드=\" + request.status + \" 메세지=\" + request.responseText + \" 오류=\" + e);\r\n");
      out.write("			}\r\n");
      out.write("		});\r\n");
      out.write("	});\r\n");
      out.write("	\r\n");
      out.write("	$(\"#uploadbtn\").on('click', function(){\r\n");
      out.write("		new FormData($(\"#uploadform\").get(0))//html form태그에 입력된 태그 정보를 갖고있는 객체\r\n");
      out.write("											//$(\"#uploadform\").get(0) jquery객체를 자바스크립 객체로\r\n");
      out.write("		$.ajax({\r\n");
      out.write("			url: \"ajaxupload\",\r\n");
      out.write("			data: data,\r\n");
      out.write("			encType: \"multipart/form-data\", //파일업로드시 필요함\r\n");
      out.write("			processData: false, //name = value 전송 x\r\n");
      out.write("			contentType: false, //request.setContentType(\"text/html\")이 기본 설정을 안쓰겠다 스트림으로 받아라\r\n");
      out.write("			type: 'post',\r\n");
      out.write("			dataType: 'json', //xml도 있지만 옛날 방식\r\n");
      out.write("			success: function(response){\r\n");
      out.write("				alert(JSON.stringify(response));\r\n");
      out.write("				$(\"#uploadresult\").html(response.uploadresult);\r\n");
      out.write("			}, \r\n");
      out.write("			error: function(request, e){\r\n");
      out.write("				alert(\"오류 났다 코드=\" + request.status + \" 메세지=\" + request.responseText + \" 오류=\" + e);\r\n");
      out.write("			}\r\n");
      out.write("		});\r\n");
      out.write("	});\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("})\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<h1>ajax 테스트</h1>\r\n");
      out.write("<form action=\"nonajaxlogin\">\r\n");
      out.write("아이디<input type=text name=\"memberid\" id=\"memberid\"><br>\r\n");
      out.write("암호<input type=password name=\"pw\" id=\"pw\"><br>\r\n");
      out.write("<input type=\"submit\" value=\"nonajax로그인\">\r\n");
      out.write("<input type=\"button\" id=\"ajaxbtn1\" value=\"ajax로그인\">\r\n");
      out.write("<input type=\"button\" id=\"ajaxbtn2\" value=\"ajax내정보조회\">\r\n");
      out.write("<input type=\"button\" id=\"ajaxbtn3\" value=\"ajax모든회원정보조회\">\r\n");
      out.write("<input type=\"button\" id=\"ajaxbtn4\" value=\"ajax암호\">\r\n");
      out.write("</form>\r\n");
      out.write("<div id=\"result\">회원정보</div>\r\n");
      out.write("<hr>\r\n");
      out.write("<form id=\"upload\">\r\n");
      out.write("파일선택: <input type=\"file\" name=\"uploadfile\">\r\n");
      out.write("<input type=\"button\" id=\"uploadbtn\" value=\"파일업로드\">\r\n");
      out.write("</form>\r\n");
      out.write("<div id=\"uploadresult\">파일 업로드 결과</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
