package com.mc.multicinema.moviecomment.service;

import java.util.HashMap;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.mc.multicinema.moviecomment.dao.MovieCommentDAO;
import com.mc.multicinema.moviecomment.dto.MovieCommentDTO;

@Service
public class MovieCommentServiceImpl implements MovieCommentService{
	@Autowired
	MovieCommentDAO dao;
	
	@Override
	public int insertMovieComment(MovieCommentDTO dto) {
		HashMap<String, Integer> map = new HashMap<>();
		map.put("user_key", dto.getUser_key());
		map.put("movie_cd", dto.getMovie_cd());
		
		System.out.println("============="+dto.getUser_key() +"/"+ dto.getMovie_cd()+"=============");
		MovieCommentDTO result = dao.selectOneMovieComment(map);
		if(result != null) {
			System.out.println("=============이미 존재=============");
			return -2;
		}else {
			System.out.println("else 들어감");
			return dao.insertMovieComment(dto);
		}
		
	}

	@Override
	public String likeAdd(Integer comment_num, Integer user_key) {
		System.out.println("=================ser comnum:"+comment_num + "/" + "uskey" + user_key +"================");
		HashMap<String, Integer> map = new HashMap<>();
		map.put("comment_num", comment_num);
		map.put("user_key", user_key);
		System.out.println("=================ser map comnum:"+map.get("comment_num")+ "/" + "uskey" + map.get("user_key") +"================");
		String res = dao.selectOneLike(map);
		if(res == null) {
			int isrtResult = dao.insertOneLike(map);
			int udtResult = dao.updateOneLike(map);
			if(isrtResult == -1) {
				//롤백
				return "insertOneLike 오류";
			}if(udtResult  == -1) {
				//롤백
				return "udtResultOneLike 오류";
			}else {
				return "좋아요 추가성공";
			}
		}else {
			return "중복";
		}
		
	}

	@Override
	public int deleteComment(int comment_num) {
		
		int res = dao.deleteCommentLike(comment_num);
		System.out.println("===============ser: " + res + "=========================");
		if(res == -1) {
			return -2;
		}else {
			return dao.deleteComment(comment_num);
		}
		
	}

	@Override
	public int updateMovieComment(MovieCommentDTO dto) {
		return dao.updateMovieComment(dto);	 
	}
	
	@Override
	public List<MovieCommentDTO> movieCommentsInit(String movie_cd) {
		String commentsCount = "10";
		return dao.selectMovieCommentsInit(movie_cd, commentsCount);
		
	}

	@Override
	public List<MovieCommentDTO> moreComment(String movie_cd, String commentsStart, String commentsCount, String sort_criteria, String sort_sw) {
		Integer movie_cd_parse = Integer.parseInt(movie_cd);
		Integer commentsStart_parse = Integer.parseInt(commentsStart);
		Integer commentsCount_parse = Integer.parseInt(commentsCount);
		
		HashMap<String, Integer> map = new HashMap<>();
		map.put("movie_cd", movie_cd_parse);
		map.put("commentsStart", commentsStart_parse);
		map.put("commentsCount", commentsCount_parse);
		map.put("sort_criteria", sort_criteria);
		map.put("sort_sw", sort_sw);
		
		
		return dao.selectListComment(map);
		
	}
	
}
