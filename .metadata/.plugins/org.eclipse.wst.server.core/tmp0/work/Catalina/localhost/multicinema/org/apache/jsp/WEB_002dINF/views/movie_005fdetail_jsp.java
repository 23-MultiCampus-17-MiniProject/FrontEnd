/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.69
 * Generated at: 2023-12-10 23:53:15 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.ArrayList;
import com.mc.multicinema.moviecomment.dto.MovieCommentDTO;

public final class movie_005fdetail_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/C:/fullstack/workspace_spring/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/com.mc.multicinema/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1700722793129L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.ArrayList");
    _jspx_imports_classes.add("com.mc.multicinema.moviecomment.dto.MovieCommentDTO");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    \r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("<title>MultiCinema</title>\r\n");
      out.write("<script src=\"resources/js/jquery-3.7.1.min.js\"></script>\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"resources/css/movie_detail.css\">\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("$(document).ready(function(){\r\n");
      out.write("	$(\"#write_btn\").on('click', function(e){\r\n");
      out.write("		\r\n");
      out.write("		if(\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${login_user_id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" == \"\"){\r\n");
      out.write("			if(confirm(\"한줄평은 로그인 후 등록 가능합니다. 로그인하시겠습니까?\") == true){\r\n");
      out.write("				e.preventDefault();\r\n");
      out.write("				location.href = \"login\";//이 부분은 나중에 확인 확인이든 취소든 뭘 눌러도 오류뜸 왜?\r\n");
      out.write("			}\r\n");
      out.write("		}else{\r\n");
      out.write("			e.submit();\r\n");
      out.write("		}\r\n");
      out.write("	});\r\n");
      out.write("	\r\n");
      out.write("	let movie_comments_list = document.getElementById(\"movie_comments_list\");\r\n");
      out.write("			\r\n");
      out.write("	//******************************   평점   ****************************************//\r\n");
      out.write("		let stars = document.querySelectorAll(\".stars\");\r\n");
      out.write("		let click_star_value = 0;\r\n");
      out.write("		let flg = false;\r\n");
      out.write("		\r\n");
      out.write("		function addEvent(start){\r\n");
      out.write("			stars = document.querySelectorAll(\".stars\");\r\n");
      out.write("			if(start == null){\r\n");
      out.write("				start = 0;\r\n");
      out.write("			}\r\n");
      out.write("			for(let i = start; i < stars.length; i++){\r\n");
      out.write("				\r\n");
      out.write("				stars[i].addEventListener(\"mouseenter\", () =>  lightenStar(i));\r\n");
      out.write("				stars[i].addEventListener(\"mouseleave\", () => darkenStar(start, i));\r\n");
      out.write("			}\r\n");
      out.write("		}	\r\n");
      out.write("		\r\n");
      out.write("		function addClickEvent(){\r\n");
      out.write("			\r\n");
      out.write("			stars = document.querySelectorAll(\".stars\");\r\n");
      out.write("			for(let i = 0; i < stars.length; i++){\r\n");
      out.write("				stars[i].addEventListener(\"click\", (e) => {\r\n");
      out.write("					//같은별 클릭했을 경우\r\n");
      out.write("					if(click_star_value == stars[i].value){\r\n");
      out.write("						click_star_value = 0;\r\n");
      out.write("						e.target.checked = false;\r\n");
      out.write("					//다른 별 클릭했을 경우\r\n");
      out.write("					}else{\r\n");
      out.write("						click_star_value = stars[i].value;\r\n");
      out.write("						for(let j = click_star_value; j < stars.length; j++){\r\n");
      out.write("							stars[j].style.content = \"url(resources/images/1emptystar.png)\";\r\n");
      out.write("						}\r\n");
      out.write("					}\r\n");
      out.write("				});\r\n");
      out.write("			}\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		function lightenStar(end){\r\n");
      out.write("			\r\n");
      out.write("			for(let j = 0; j <= end; j++){\r\n");
      out.write("				stars[j].style.content = \"url(resources/images/1star.png)\";\r\n");
      out.write("			}\r\n");
      out.write("		}\r\n");
      out.write("\r\n");
      out.write("		function darkenStar(start, end){\r\n");
      out.write("			for(let j = start; j <= end; j++){\r\n");
      out.write("				if(click_star_value <= j){\r\n");
      out.write("					stars[j].style.content = \"url(resources/images/1emptystar.png)\";\r\n");
      out.write("				}\r\n");
      out.write("			}\r\n");
      out.write("		}\r\n");
      out.write("		addEvent();\r\n");
      out.write("		addClickEvent();\r\n");
      out.write("		\r\n");
      out.write("		let btn_left = document.getElementById(\"slide_btn_left\");\r\n");
      out.write("		let btn_right = document.getElementById(\"slide_btn_right\");\r\n");
      out.write("		var current_page = 1;\r\n");
      out.write("		\r\n");
      out.write("		");
 ArrayList<String> stillcutlist= (ArrayList<String>)request.getAttribute("stillcutlist");
      out.write("\r\n");
      out.write("		let stillcutlistlength = (Number(");
      out.print(stillcutlist.size() );
      out.write(") + 2) * 180;\r\n");
      out.write("		$(\"#still_cut_slider\").attr(\"style\",\"width: \"+ stillcutlistlength + \"px\");\r\n");
      out.write("		var end_page = Math.ceil(stillcutlistlength / 800);\r\n");
      out.write("		btn_right.addEventListener('click', function(){\r\n");
      out.write("			if(end_page != current_page){\r\n");
      out.write("				document.getElementById(\"still_cut_slider\").style.transform = \"translate(-\" + (800 * current_page) + \"px)\"\r\n");
      out.write("				document.getElementById(\"still_cut_slider\").style.transitionProperty = \"transition-property: transform;\";\r\n");
      out.write("				document.getElementById(\"still_cut_slider\").style.transitionDuration = \"0.5s\";\r\n");
      out.write("				current_page++;\r\n");
      out.write("				console.log(current_page);\r\n");
      out.write("				console.log(\"endpage:\" +end_page);\r\n");
      out.write("			}\r\n");
      out.write("		});\r\n");
      out.write("		btn_left.addEventListener('click', function(){\r\n");
      out.write("			if(current_page != 1){\r\n");
      out.write("				current_page--;\r\n");
      out.write("				document.getElementById(\"still_cut_slider\").style.transform = \"translate(-\" + (800 * (current_page - 1))+ \"px)\"\r\n");
      out.write("				document.getElementById(\"still_cut_slider\").style.transitionProperty = \"transition-property: transform;\";\r\n");
      out.write("				document.getElementById(\"still_cut_slider\").style.transitionDuration = \"0.5s\";\r\n");
      out.write("				console.log(current_page);\r\n");
      out.write("				\r\n");
      out.write("			}\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("});\r\n");
      out.write("</script>\r\n");
      out.write("<script src=\"resources/js/movie_detail_1.js\"></script>\r\n");
      out.write("<body>\r\n");
      out.write("<div id=\"headerInput\"></div>\r\n");
      out.write("<!-- body start -->\r\n");

String message = (String)session.getAttribute("message");
if(message != null){

      out.write("	\r\n");
      out.write("	<script>alert(\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${message}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\");</script>\r\n");

	session.removeAttribute("message");
}

      out.write('\r');
      out.write('\n');
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${login_user_name }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\r\n");
      out.write("<input type=\"hidden\" id=\"hidden_login_user_id\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${login_user_id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("<input type=\"hidden\" id=\"hidden_movie_cd\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${movie_cd}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("<input type=\"hidden\" id=\"hidden_login_user_key\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${login_user_key}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("<div id=\"contents\">\r\n");
      out.write("	<div id=\"contents_movie_detail\">\r\n");
      out.write("		<div id=\"movie_datail_upper\">\r\n");
      out.write("			<div id=\"movie_poster\">\r\n");
      out.write("				<img src=\"resources/images/movie_poster/더_마블스.jpg\" alt=\"더_마블스.jpg\">\r\n");
      out.write("			</div>\r\n");
      out.write("			<div id=\"movie_info\">\r\n");
      out.write("				<div id=\"movie_info_title\">\r\n");
      out.write("					<h1>더 마블스</h1>\r\n");
      out.write("				</div>\r\n");
      out.write("				<div>\r\n");
      out.write("					<h4>감독: 김민성</h4>\r\n");
      out.write("					<h4>배우: 김민성,김민성,김민성,김민성,김민성</h4>\r\n");
      out.write("					<h4><span>드라마</span><span>대한민국</span><span>130분</span><span>2023.10.25</span></h4>\r\n");
      out.write("				</div>\r\n");
      out.write("				<div id=\"movie_info_synopsis\">\r\n");
      out.write("					<p>\r\n");
      out.write("					</p>\r\n");
      out.write("				</div>\r\n");
      out.write("				<div id=\"movie_info_ticketing\">\r\n");
      out.write("					<a href=\"/ticketing.html?movie=\">\r\n");
      out.write("						<div>예매하기</div>\r\n");
      out.write("					</a>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("		\r\n");
      out.write("		<div id=\"still_cut_list\">\r\n");
      out.write("			<div id=\"still_cut_slider\">\r\n");
      out.write("		");

		
		for(int i = 0; i < stillcutlist.size(); i++){ 
      out.write("\r\n");
      out.write("			<a href=\"");
      out.print(stillcutlist.get(i) );
      out.write("\"><img src=\"");
      out.print(stillcutlist.get(i) );
      out.write("\" alt=\"");
      out.print(stillcutlist.get(i) );
      out.write("\"></a>\r\n");
      out.write("		");
} 
      out.write("\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("		\r\n");
      out.write("		<button id=\"slide_btn_left\"> < </button><button id=\"slide_btn_right\"> > </button>\r\n");
      out.write("		\r\n");
      out.write("	</div>\r\n");
      out.write("	<div id=\"contents_movie_comments\">\r\n");
      out.write("		<h2>한줄평</h2>\r\n");
      out.write("		<div id=\"comments_sort_btn\">\r\n");
      out.write("			<button class = \"sort_btn\" id=\"sort_date_btn\">날짜 별로 정렬</button><button class = \"sort_btn\" id=\"sort_like_btn\">좋아요 순으로 정렬</button><button class = \"sort_btn\" id=\"sort_score_btn\">평점 순으로 정렬</button>\r\n");
      out.write("		</div>\r\n");
      out.write("		<form action=\"moviedetail\" method=\"post\">\r\n");
      out.write("		<div id=\"write_comments\">\r\n");
      out.write("			<div id=\"rating_star\">\r\n");
      out.write("				<input type=\"radio\" name=\"comment_score\" id=\"1star\" value=\"1\" class=\"stars\">\r\n");
      out.write("				<input type=\"radio\" name=\"comment_score\" id=\"2star\" value=\"2\" class=\"stars\">\r\n");
      out.write("				<input type=\"radio\" name=\"comment_score\" id=\"3star\" value=\"3\" class=\"stars\">\r\n");
      out.write("				<input type=\"radio\" name=\"comment_score\" id=\"4star\" value=\"4\" class=\"stars\">\r\n");
      out.write("				<input type=\"radio\" name=\"comment_score\" id=\"5star\" value=\"5\" class=\"stars\">\r\n");
      out.write("			</div>\r\n");
      out.write("			<div>\r\n");
      out.write("				\r\n");
      out.write("			</div>\r\n");
      out.write("			<input id=\"writing_commentbox\" type=\"text\" name=\"comment_content\" placeholder=\"최대 50글자를 입력해주세요\" maxlength=\"50\">\r\n");
      out.write("			<input type=\"hidden\" id=\"movie_cd\" name=\"movie_cd\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${movie_cd }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"><!-- 영화정보같이 -->\r\n");
      out.write("			<input type=\"hidden\" id=\"user_key\" name=\"user_key\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${login_user_key }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("			<button id=\"write_btn\">쓰기</button><!-- 버튼 이벤트 구현 -->\r\n");
      out.write("		</div>\r\n");
      out.write("		</form>\r\n");
      out.write("		<div id=\"movie_comments_list\">\r\n");
      out.write("			\r\n");
      out.write("			");
 ArrayList<MovieCommentDTO> commentlist= (ArrayList<MovieCommentDTO>)request.getAttribute("commentlist");
			String login_user_id = (String)session.getAttribute("login_user_id");
			if(login_user_id == null){
				login_user_id = "";
			}
			for(MovieCommentDTO dto : commentlist){ 
				//if(로그인 유저의 키 == dto.user_key)
			
      out.write("\r\n");
      out.write("				<div class=\"comments\" id='");
      out.print(dto.getComment_num() );
      out.write("'>\r\n");
      out.write("					<div>\r\n");
      out.write("						<div class=\"comments_id\" style=\"display: inline-block\">\r\n");
      out.write("							");
      out.print(dto.getUser_id() );
      out.write("\r\n");
      out.write("						</div>\r\n");
      out.write("						<span>\r\n");
      out.write("							평점\r\n");
      out.write("						</span>\r\n");
      out.write("						<span class=\"comment_score\">\r\n");
      out.write("							");
      out.print(dto.getComment_score() );
      out.write("\r\n");
      out.write("						</span>\r\n");
      out.write("						<div class=\"like_btn\"  style=\"display: inline-block\">\r\n");
      out.write("							<img src=\"resources/images/like.png\"  ><span class=\"comment_like\">");
      out.print(dto.getComment_like() );
      out.write("</span>\r\n");
      out.write("						</div>\r\n");
      out.write("					</div>\r\n");
      out.write("					\r\n");
      out.write("					<div>\r\n");
      out.write("						<div class=\"comments_date\" style=\"display: inline-block\">\r\n");
      out.write("							");
      out.print(dto.getComment_write_date() );
      out.write("\r\n");
      out.write("						</div>\r\n");
      out.write("						");
if(login_user_id.equals(dto.getUser_id())){
							
      out.write("\r\n");
      out.write("						<div id=\"my_comment_modify_part\" style=\"display: inline-block\">\r\n");
      out.write("							<form id=\"updateform\" action=\"updatemoviecomment\" method=\"post\" style=\"display: none\">\r\n");
      out.write("								<input type=\"hidden\" name=\"comment_num\" value=\"");
      out.print(dto.getComment_num() );
      out.write("\">\r\n");
      out.write("								<input type=\"hidden\" name=\"movie_cd\" value=\"");
      out.print(dto.getMovie_cd() );
      out.write("\">\r\n");
      out.write("								<select id=\"update_score\" name=\"comment_score\">\r\n");
      out.write("									<option value=\"0\">0\r\n");
      out.write("									<option value=\"1\">1\r\n");
      out.write("									<option value=\"2\">2\r\n");
      out.write("									<option value=\"3\">3\r\n");
      out.write("									<option value=\"4\">4\r\n");
      out.write("									<option value=\"5\">5\r\n");
      out.write("								</select>\r\n");
      out.write("								<textarea id=\"updateform_content\" name=\"comment_content\" ></textarea>							\r\n");
      out.write("								<button id=\"my_comments_modify_confirm_btn\">수정확인</button>\r\n");
      out.write("							</form>\r\n");
      out.write("								<button id=\"my_comments_modify_cancel_btn\" style=\"display: none\">취소</button>\r\n");
      out.write("								<button id=\"my_comments_modify_btn\">수정</button>\r\n");
      out.write("							<form id=\"deleteform\" action=\"deletemoviecomment\" method=\"post\" style=\"display: inline-block\">\r\n");
      out.write("								<input type=\"hidden\" name=\"comment_num\" value=\"");
      out.print(dto.getComment_num() );
      out.write("\">\r\n");
      out.write("								<input type=\"hidden\" name=\"movie_cd\" value=\"");
      out.print(dto.getMovie_cd() );
      out.write("\">\r\n");
      out.write("								<button id=\"my_comments_delete_btn\">삭제</button>\r\n");
      out.write("							</form>\r\n");
      out.write("						</div>\r\n");
      out.write("						");
}
      out.write("\r\n");
      out.write("					</div>\r\n");
      out.write("					<div class=\"comments_contents\">\r\n");
      out.write("						");
      out.print(dto.getComment_content() );
      out.write("\r\n");
      out.write("					</div>\r\n");
      out.write("					\r\n");
      out.write("				</div>\r\n");
      out.write("			");
} 
      out.write("\r\n");
      out.write("		</div>\r\n");
      out.write("		<button id=\"more_comments_btn\">더보기 버튼</button>\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- body end -->\r\n");
      out.write("<div id=\"footerInput\"></div>\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
