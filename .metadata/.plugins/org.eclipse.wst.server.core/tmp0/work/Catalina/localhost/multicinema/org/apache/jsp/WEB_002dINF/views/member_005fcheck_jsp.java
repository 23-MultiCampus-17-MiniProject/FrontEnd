/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.69
 * Generated at: 2023-12-10 20:46:25 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class member_005fcheck_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("<title>멀티시네마 가입여부 확인</title>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"resources/css/index.css\">\r\n");
      out.write("</head>\r\n");
      out.write("<header class=\"body\">\r\n");
      out.write("	<div class=\"header\">\r\n");
      out.write("		<h1 class=\"mainlogo\">\r\n");
      out.write("			<a href=\"main_signout.html\" title=\"홈화면으로 가기\">홈으로가기</a>\r\n");
      out.write("		</h1>\r\n");
      out.write("		<div class=\"myinformation\">\r\n");
      out.write("			<a href=\"main_signin.html\">로그인하기</a>\r\n");
      out.write("			<a href=\"signin.html\">회원가입</a>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("		\r\n");
      out.write("	<hr>\r\n");
      out.write("	<ul id=\"mainNavigator\">\r\n");
      out.write("		<li id=\"movie\"><a href=\"movie.html\">영화</a></li>\r\n");
      out.write("		<li id=\"ticketing\"><a href=\"tiketing.html\">예매</a></li>\r\n");
      out.write("		<li id=\"theater\"><a href=\"theater.html\">영화관</a></li>\r\n");
      out.write("	</ul>\r\n");
      out.write("	<hr>\r\n");
      out.write("</header>\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"resources/css/join_confirm.css\">\r\n");
      out.write("<script src=\"resources/js/member_check.js\"></script>\r\n");
      out.write("<script src=\"resources/js/jquery-3.7.1.min.js\"></script>\r\n");
      out.write("<script>\r\n");
      out.write("$(document).ready(function(){\r\n");
      out.write("	let message = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${result}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\";\r\n");
      out.write("	if(message != \"\" && message == \"이미 존재하는 회원입니다\"){\r\n");
      out.write("		alert(message);\r\n");
      out.write("		");
request.removeAttribute("result"); 
      out.write("\r\n");
      out.write("	}else if(message != \"\" && message == \"가입가능\"){\r\n");
      out.write("		$(\"#user_id_check\").attr(\"value\", \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${user_id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\");\r\n");
      out.write("		$(\"#user_email_check\").attr(\"value\", \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${user_email}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\");\r\n");
      out.write("		$(\"#check_form\").attr(\"action\",\"memberjoin\").submit();\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<div id=\"container\">\r\n");
      out.write("	<div id=\"contents\">\r\n");
      out.write("		<div id=\"contents_header\">\r\n");
      out.write("			<h1>Multi Cinema 가입여부 확인</h1>\r\n");
      out.write("		</div>\r\n");
      out.write("		<div id=\"check\">\r\n");
      out.write("			<div id=\"info\">\r\n");
      out.write("				<P>회원 가입 여부 확인을 위해 개인정보를 정확히 입력해주세요<br>\r\n");
      out.write("					입력하신 정보는 가입 여부 확인에만 사용되며 저장되지 않습니다\r\n");
      out.write("				</P>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div id=\"check_member_form\">\r\n");
      out.write("				\r\n");
      out.write("				<div class=\"text_box\">\r\n");
      out.write("					아이디 <input type=\"text\" class=\"text\" id=\"user_id\" placeholder=\"아이디를 입력해주세요.\">\r\n");
      out.write("					<p class=\"error_message\" id=\"user_id_errmsg\" style=\"visibility: hidden\"></p>\r\n");
      out.write("				</div>\r\n");
      out.write("				<div class=\"text_box\">\r\n");
      out.write("					이메일 <input type=\"text\" class=\"text\" id=\"user_email\" placeholder=\"이메일을 입력해주세요\" >\r\n");
      out.write("					@\r\n");
      out.write("					<select id=\"email_select\">\r\n");
      out.write("						<option>naver.com</option>\r\n");
      out.write("						<option>google.com</option>\r\n");
      out.write("						<option>daum.net</option>\r\n");
      out.write("						<option>직접입력</option>\r\n");
      out.write("					</select>\r\n");
      out.write("					<input type=\"text\" class=\"text\" id=\"user_email_dir\" placeholder=\"도메인을 입력해주세요\" style=\"visibility: hidden\" >\r\n");
      out.write("					<p class=\"error_message\" id=\"user_email_errmsg\" style=\"visibility: hidden\"></p>\r\n");
      out.write("					\r\n");
      out.write("				</div>\r\n");
      out.write("				<div id=\"btn_confirm_wrap\">\r\n");
      out.write("				<form id=\"check_form\" action=\"membercheck\" method=\"post\">\r\n");
      out.write("					<input type=\"hidden\" name=\"user_id\" id=\"user_id_check\" value=\"default\">\r\n");
      out.write("					<input type=\"hidden\" name=\"user_email\" id=\"user_email_check\" value=\"default\">\r\n");
      out.write("					<input type=\"submit\" id=\"btn_confirm\" value=\"가입여부 확인\" >\r\n");
      out.write("				</form>\r\n");
      out.write("				</div>\r\n");
      out.write("				\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div> \r\n");
      out.write("</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
